---
- name: Load a variable file based on the OS type
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_major_version }}-dependencies.yaml'
      paths:
        - 'vars'

- name: Install PostgreSQL server
  block:
    - name: Install PostgreSQL server for RedHat
      include_tasks: el/main.yaml
      when: ansible_os_family == 'RedHat'
    - name: Install PostgreSQL server for RedHat
      include_tasks: debian/main.yaml
      when: ansible_os_family == 'Debian'

- name: Install Python package manager
  when: update_pg_hba_conf
  block:
  - name: Install python package manager
    package:
      name: python3-pip
      state: present
  - name: Update pip engine to at least 
    pip:
      executable: "{{ pip_executeable }}"
      state: present
      name: pip>=21.3.1
  - name: Check pip version
    register: pip_version
    command:
      cmd: "{{ pip_executeable }} --version"
  - name: debug pip version
    debug:
      msg: "{{ pip_version.stdout }}"
  - name: Install default package
    pip:
      executable: "{{ pip_executeable }}"
      name: "{{ item }}"
      state: present
    loop:
      - psycopg
      - psycopg2-binary
      - urllib3

- name: Enable & Start the service
  block: 
    - name: Make sure a service unit is running
      ansible.builtin.systemd_service:
        state: started
        daemon_reload: true
        enabled: true
        name: 'postgresql-{{ postgres_version }}'

- name: Configure PostgreSQL server
  when: update_pg_hba_conf
  block:
    - name: Setup pg_hba.conf
      postgresql_pg_hba:
        dest: "{{ postgres_data_dir }}/pg_hba.conf"
        contype: host
        users: "{{ pg_hba_users_mode | default('all') }}"
        source: "{{ pg_hba_source_mode | default('0.0.0.0/0') }}"
        databases: "{{ pg_hba_database_mode | default('all') }}"
        method: "{{ pg_hba_auth_method | default('scram-sha-256') }}"
        create: true
    - name: Remove default pg_hba on 127.0.0.1/32
      postgresql_pg_hba:
        dest: "{{ postgres_data_dir }}/pg_hba.conf"
        contype: host
        users: "all"
        source: "127.0.0.1/32"
        databases: "all"
        method: "scram-sha-256"
        state: absent
    - name: Allow port listen from anywhere
      ansible.builtin.lineinfile:
        path: "{{ postgres_data_dir }}/postgresql.conf"
        line: "listen_addresses = '*'"
        state: present
        create: yes
    - name: Set specified port in config
      notify: pg-restart-service
      ansible.builtin.lineinfile:
        path: "{{ postgres_data_dir }}/postgresql.conf"
        line: "port = 5432"
        state: present
        create: yes
    - name: pg-restart-service
      systemd_service:
        state: restarted
        name: 'postgresql-{{ postgres_version }}'

- name: Install patroni binary
  when: enabled_postgresql_ha
  block:
  - name: Install patroni binnary for pip
    pip:
      executable: "{{ pip_executeable }}"
      name: "{{ item }}"
      state: present
    loop:
      - patroni[etcd]=={{ pip_patroni_etcd_version }}
  - name: Create a symbolic link of patroni
    ansible.builtin.file:
      src: /usr/local/bin/patroni
      dest: /usr/bin/patroni
      state: link
  - name: Create a symbolic link of patroni
    ansible.builtin.file:
      src: /usr/local/bin/patronictl
      dest: /usr/bin/patronictl
      state: link
  - name: Check patroni version
    command:
      cmd: "{{ pip_executeable }} show patroni"
    register: patroni_version
  - name: Debug version patroni
    debug:
      msg: "{{ patroni_version }}"
  - name: Check patronictl version
    command:
      cmd: patronictl version
    register: patronictl_version
  - name: Debug version patronictl
    debug:
      msg: "{{ patronictl_version }}"
- name: Install etcd
  when: enabled_postgresql_ha
  block:
    - name: Enable module etcd3 from pip
      pip:
        executable: "{{ pip_executeable }}"
        name: "{{ item }}"
        state: present
      loop:
        - etcd3=={{ pip_etcd3_version }}
    - name: Install etcd engine
      package:
        name: "etcd3=={{ etcd_engine_version }}"
        state: present
    - name: Check etcd engine version
      command:
        cmd: etcd version
      register: etcd_version
    - name: Debug version etcd
      debug:
        msg: "{{ etcd_version }}"